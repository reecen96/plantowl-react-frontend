{"version":3,"sources":["components/PlantStatus.js","components/Reports.js","components/PlantDetails.js","components/Register.js","components/DataCenter.js","components/ThreeD.js","components/Login.js","components/Plants.js","reportWebVitals.js","index.js"],"names":["App","id","this","props","data","currentMoisture","currentMoisture2","currentWaterLevel","src","alt","class","animate","nrOfLevels","percent","currentTemperature","needleColor","ProgressBar","variant","now","React","Component","state","date","moisture","temperature","temprature","waterLevel","dateDay","dateMonth","watered","temperatureDay","temperatureMonth","wateredMonth","wateredDay","moisture2","labels","datasets","label","fill","backgroundColor","borderColor","className","scope","colspan","Register","email","password","conpassword","username","ev","console","log","target","value","setState","conspassword","handleSubmit","preventDefault","onRegisterSubmit","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","isActive","document","addEventListener","evt","closest","moistureDay","waterLevelDay","moistureMonth","waterLevelMonth","warn","temperatureData","lineTension","borderWidth","moistureData","waterData","waterLevelData","options","title","display","text","fontSize","legend","position","DropdownButton","Dropdown","Item","ThreeD","index","i","map","push","x","y","z","mode","name","layout","height","width","onRelayout","figure","Login","onLoginSubmit","NODE_PLANTS_BASE_URL","NODE_PLANTS_POST_URL","NODE_REGISTER_POST_URL","Plants","plants","plantData","moisture2Day","moisture2Month","token","setToken","currentWatered","currentDate","curTime","Date","toLocaleString","getData","localStorage","getItem","axios","defaults","headers","common","get","then","res","current_watered","current_date","current_moisture","current_moisture2","current_temperature","current_waterlevel","day","getDay","month","getMonth","createdAt","length","stateMonth","stateDay","catch","saveLogin","post","setItem","window","location","href","saveRegister","setTimeout","check","style","xmlns","viewBox","d","fill-rule","data-feather","path","exact","component","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.faf71ec5.chunk.js","sourcesContent":["import React from 'react';\nimport GaugeChart from 'react-gauge-chart'\nimport ProgressBar from 'react-bootstrap/ProgressBar'\n\n\nexport default class App extends React.Component {\n\n\n  render() {\n    return (\n      <div id=\"gauges\">\n         <h1 id=\"reports\"> Plant Status </h1>\n         <div id=\"plantimage\">\n            <div id= \"plant1\"> {this.props.data.currentMoisture*100}% </div>\n            <div id= \"plant2\"> {this.props.data.currentMoisture2*100}%  </div>\n            <div id= \"water\"> {this.props.data.currentWaterLevel*4}L </div>\n            <img id =\"plantpic\" src=\"https://i.ibb.co/rHpc49z/Screen-Shot-2021-02-04-at-11-50-20-am.png\" alt=\"plan.png\"/>\n         </div>\n         <div id=\"gaugesmove\">\n            <div class=\"row\">\n               <div id=\"plantstatus\">\n                  <div class=\"row\">\n                     <div class=\"col\">\n                        <GaugeChart id=\"gauge-chart6\"\n                           animate={false}\n                           nrOfLevels={30}\n                           percent={this.props.data.currentTemperature}\n                           needleColor=\"#345243\"  />\n                        Temprature\n                     </div>\n                     <div class=\"col\">\n                        <GaugeChart id=\"gauge-chart6\"\n                           animate={false}\n                           nrOfLevels={30}\n                           percent={this.props.data.currentMoisture}\n                           needleColor=\"#345243\" />\n                        Soil moisture sensor - plant 1\n                     </div>\n                     <div class=\"col\">\n                        <GaugeChart id=\"gauge-chart6\"\n                           animate={false}\n                           nrOfLevels={30}\n                           percent={this.props.data.currentMoisture2}\n                           needleColor=\"#345243\"  />\n                        Soil moisture sensor - plant 2\n                     </div>\n\n                  </div>\n                  <div class=\"row\">\n                     <div class=\"col-8\">\n                        <br/>\n                    \n                        <br/>\n                        <br/>\n                        <br/>\n                        <ProgressBar variant=\"success\" now={this.props.data.currentMoisture*100} />\n                        Need to be watered - plant 1\n                        <br/>\n                        <br/>\n                        <br/>\n                        <ProgressBar variant=\"success\" now={this.props.data.currentMoisture2*100} />\n                        Need to be watered - plant 2\n                        <br/>\n                        <br/>\n                        <br/>\n                        <ProgressBar variant=\"info\" now={this.props.data.currentWaterLevel*100} />\n                        Water available\n                        <br/>\n                        <br/>\n                        <br/>\n                        <ProgressBar variant=\"warning\" now={this.props.data.currentTemperature*100} />\n                        Optimal temprature for plant growth\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <ProgressBar variant=\"warning\" now={this.props.data.currentTemperature*100} />\n                        Overall greenhouse rating\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n\n    )\n  }\n}\n","import React from 'react';\nimport GaugeChart from 'react-gauge-chart'\nimport { Line } from \"react-chartjs-2\";\n\n\n\n\nexport default class App extends React.Component {\n\nstate = {\ndate: this.props.date,\nmoisture: this.props.moisture,\ntemperature: this.props.temprature\n}\n\nrender() {\n\n  //setting props data\n  const {\n      temperature,\n      moisture,\n      date,\n      dateDay,\n      dateMonth,\n      waterLevel,\n      temperatureDay,\n      temperatureMonth,\n      wateredMonth,\n      wateredDay,\n      watered,\n      moisture2\n  } = this.props.data\n\n  //Finding the average temprature(formula)\n  const calculation = () => {\n      let total = 0;\n      for (var i = 0; i < temperature.length; i++) {\n          total += temperature[i];\n      }\n      var avg = total / temperature.length;\n  }\n\n  //setting dataset for graph\n  const data = {\n      labels: date,\n      datasets: [{\n              label: \"Temprature\",\n              data: temperature,\n              fill: true,\n              backgroundColor: \"rgba(75,192,192,0.2)\",\n              borderColor: \"rgba(75,192,192,1)\"\n          },\n          {\n              label: \"Soil moisture plant 1\",\n              data: moisture,\n              fill: false,\n              borderColor: \"#742774\"\n          },\n          {\n              label: \"Soil moisture plant 2\",\n              data: moisture2,\n              fill: false,\n              borderColor: \"#742774\"\n          },\n          {\n              label: \"Water Level\",\n              data: waterLevel,\n              fill: false,\n              borderColor: \"yellow\"\n          },\n          {\n              label: \"Plant watered\",\n              data: watered,\n              fill: false,\n              borderColor: \"green\"\n          }\n      ]\n  };\n\n  //return HTML\n  return (\n\n    <div className=\"App\">\n       <h1 id=\"heading\"> Reports </h1>\n       <div id=\"reportschart\">\n          <Line data={data} />\n       </div>\n       <div  id=\"reportstable\">\n          <h1> Plant Stats </h1>\n          <table class=\"table\">\n             <thead>\n                <tr>\n                   <th scope=\"col\">#</th>\n                   <th scope=\"col\">First</th>\n                   <th scope=\"col\">Last</th>\n                   <th scope=\"col\">Handle</th>\n                </tr>\n             </thead>\n             <tbody>\n                <tr>\n                   <th scope=\"row\">1</th>\n                   <td>Mark</td>\n                   <td>Otto</td>\n                   <td>@mdo</td>\n                </tr>\n                <tr>\n                   <th scope=\"row\">2</th>\n                   <td>Jacob</td>\n                   <td>Thornton</td>\n                   <td>@fat</td>\n                </tr>\n                <tr>\n                   <th scope=\"row\">3</th>\n                   <td colspan=\"2\">Larry the Bird</td>\n                   <td>@twitter</td>\n                </tr>\n             </tbody>\n          </table>\n       </div>\n    </div>\n\n    )\n  }\n}\n\n//\n//\n// localstorage.setitem(\"string\" , token)  localstorage.getitem(\"string\" , token)\n","import React from 'react';\n\n\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n      <div id=\"arduino\">\n            <h1 id=\"heading\"> Arduino circuit board </h1>\n            <img src=\"https://i.ibb.co/r5qWsLd/Screen-Shot-2021-02-04-at-9-05-30-pm.png\n      \" alt=\"arduino map\" />\n            <br />\n            <h1> Data structure </h1>\n            <img src=\"https://i.ibb.co/SV95pgf/Screen-Shot-2021-02-04-at-9-22-40-pm.png\" alt=\"background\" />\n            <br />\n            <h2> Data collected from Arduino </h2>\n            <div>\n              - Moisture sensor from plant 1 <br />\n              - Moisture sensor from plant 2 <br />\n              - Water remaining in reservoir <br />\n              - Temperature <br />\n              - Plant watering times <br /> <br />\n            </div>\n            <h2> Functionality of the Arduino </h2>\n            <div>\n              The Arduino has been programmed in 'a c/c++' to post data to a server cyclically and water plants when  their soil moisture falls below a certain %. <br/>\n              On a specified interval the Arduino collects data (soil moisture, water level, temperature) and posts it as a JSON request to a Node.js/React/Mongodb server.  <br/>\n              This date is then access from a React front end where the data is graphed and analysed.\n            </div>\n          </div>\n          </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass Register extends React.Component{\n\n\n  state = {\n    email: '',\n    password:'',\n    conpassword: '',\n    username:''\n  };\n\n  email = (ev) => {\n    console.log('email():', ev.target.value)\n    this.setState({ email: ev.target.value})\n  }\n  password = (ev) => {\n    console.log('password():', ev.target.value)\n    this.setState({ password: ev.target.value})\n  }\n  username = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ username: ev.target.value})\n  }\n  conpassword = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ conspassword: ev.target.value})\n  }\n\n  handleSubmit = (ev) => {\n\n      console.log()\n    ev.preventDefault(this.state.email, this.state.password, this.state.username); //stop the form submit from reloading the page\n    //send the secret content to the parent component so it can submit it\n    //to the parent backend\n    this.props.onRegisterSubmit( this.state.email, this.state.password, this.state.username)\n\n\n  }\n\n  render(){\n\n    return(\n      <div className=\"login-wrapper\">\n      <Form onSubmit={this.handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.email}/>\n        <Form.Text className=\"text-muted\">\n\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter username\" onChange={this.username}/>\n        <Form.Text className=\"text-muted\">\n\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.password}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Confirm passowrd</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.conspassword}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n      </Form>\n      </div>\n\n\n    )\n\n\n  } // render\n\n\n\n} //User form\n\n\nexport default Register\n\n\n\n//\n// <form onSubmit={this.handleSubmit}>\n//   <h3> Name </h3>\n//   <textarea onChange={this.username}/>\n//   <br />\n//   <h3> Email </h3>\n//   <textarea onChange={this.email}/>\n//   <br />\n//   <h4> Password </h4>\n//   <textarea onChange={this.password}/>\n//   <br />\n//   <h4> Confirm Password </h4>\n//   <textarea onChange={this.conpassword}/>\n//   <br />\n//\n//   <button> Create account </button>\n// </form>\n","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {Bar} from 'react-chartjs-2';\nimport Button from 'react-bootstrap/Button';\nimport SplitButton from 'react-bootstrap/SplitButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\n\n\n\nexport default class App extends React.Component {\n\n  //Set state\n  state = {\n     isActive: false,\n     temperature:  this.props.data.temperature,\n     moisture:  this.props.data.moisture,\n     date:  this.props.data.date,\n     waterLevel:  this.props.data.waterLevel,\n     watered: this.props.data.watered\n   }\n\n\n   componentDidMount(){\n\n   //Click handler for drop down menu\n   //Day\n   document.addEventListener('click', (evt) => {\n      if (evt.target.closest('#Day')) {\n        console.log('#Day')\n        this.setState({date:this.props.data.dateDay, temperature: this.props.data.temperatureDay, moisture: this.props.data.moistureDay, waterLevel: this.props.data.waterLevelDay, watered: this.props.wateredDay\n        })\n       return;\n    }\n  })//end click handler\n\n  //month\n  document.addEventListener('click', (evt) => {\n    if (evt.target.closest('#Month')) {\n      this.setState({date:this.props.data.dateMonth, temperature: this.props.data.temperatureMonth, moisture: this.props.data.moistureMonth, waterLevel: this.props.data.waterLevelMonth, watered: this.props.wateredMonth})\n      console.log('#Month')\n      return;\n    }\n  })// end click handler\n\n  document.addEventListener('click', (evt) => {\n    if (evt.target.closest('#All')) {\n    this.setState({date:this.props.data.date, temperature: this.props.data.temperature, moisture: this.props.data.moisture, waterLevel: this.props.data.waterLevel, watered: this.props.watered})\n    console.warn('#All');\n    return;\n    }\n  })//end click handler\n\n}//End componentDidMount\n\nrender() {\n  //pulling props.data\n  const {moisture, moistureDay, moistureMonth, temperature, temperatureDay, temperatureMonth, watered, wateredDay, wateredMonth, date, dateDay, dateMonth, waterLevel, waterLevelDay, waterLevelMonth} = this.props.data\n\n  //population data for graphs\n  //temprature data\n  const temperatureData = {\n    labels: this.state.date,\n    datasets: [\n      {\n        label: 'Rainfall',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.temperature\n      }\n    ]\n  }\n\n  //moisture data\n  const moistureData = {\n    labels: this.state.date,\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.moisture\n      }\n    ]\n  }\n\n  //water data\n  const waterData = {\n    labels: date,\n    datasets: [\n      {\n        label: 'Has been watered water',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.watered\n      }\n    ]\n  }\n\n  //water level data\n  const waterLevelData = {\n    labels: date,\n    datasets: [\n      {\n        label: 'Remaining water',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.waterLevel\n      }\n    ]\n  }\n\n\n\n  //return JSX\n  return (\n    <div class=\"container\">\n\n    <h1 id=\"heading\"> Data center </h1>\n\n    <div id=\"datacenter\">\n      <div class=\"row row-cols-2\">\n        <div class=\"col\">\n          <div class=\"p-3 border bg-light\">\n            <div id=\"BarChart\">\n              <Bar\n                data={temperatureData}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Hourly temperature',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"p-3 border bg-light\">\n            <div id=\"LineGraph\">\n              <Line\n                data={moistureData}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Hourly moisture',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"p-3 border bg-light\">\n            <Line\n              data={waterLevelData}\n              options={{\n                title:{\n                  display:true,\n                  text:'Water level available',\n                  fontSize:20\n                },\n                legend:{\n                  display:true,\n                  position:'right'\n                }\n              }}\n            />\n          </div>\n        </div>\n      <div class=\"col\">\n        <div class=\"p-3 border bg-light\">\n          <Line\n            data={waterData}\n            options={{\n              title:{\n                display:true,\n                text:'Plant has been watered',\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n        </div>\n        </div>\n      </div>\n      <br/>\n      <DropdownButton id=\"dropdown-basic-button\" title=\"Data period\">\n      <Dropdown.Item id=\"Day\">Day</Dropdown.Item>\n      <Dropdown.Item id=\"Month\">Month</Dropdown.Item>\n      <Dropdown.Item id=\"All\">All</Dropdown.Item>\n      </DropdownButton>\n      </div>\n    )//end return\n  }//end render\n}//end component\n","import React from 'react';\nimport Plot from 'react-plotly.js'\n\n\nclass ThreeD extends React.Component {\n\n  //set state\n  state = {\n      index: 0\n  }\n\n  render() {\n    //set props.data\n    const {\n        temperature,\n        moisture,\n        date,\n        dateDay,\n        dateMonth,\n        waterLevel,\n        temperatureDay,\n        temperatureMonth,\n        wateredMonth,\n        wateredDay,\n        watered,\n        moisture2\n    } = this.props.data\n    \n    console.log(\"temprature\", temperature)\n\n    //set index values for graphing\n    const index = []\n    var i = 1\n    date.map(data => {\n        i = i + 1\n        index.push(i)\n\n    })\n\n\n    return (\n      <Plot\n        data={[\n          {\n            x: index,\n            y: date,\n            z: temperature,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'temperature',\n          },\n          {\n            x: index,\n            y: date,\n            z: moisture,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'moisture plant 1',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: waterLevel,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'Water Level',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: moisture2,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'moisture plant 2',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: watered,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'plants were watered',\n\n          },\n        ]}\n        layout={{\n          height: 800,\n          width: 1200,\n          title: `Plant data`,\n        }}\n        onRelayout={(figure) => console.log(figure)}\n      />\n    );//return\n  }//render\n}//react componenet\n\n\nexport default ThreeD;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\n\nclass Login extends React.Component{\n\n\n  state = {\n    email: '',\n    password:''\n  };\n\n  username = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ email: ev.target.value})\n  }\n  password = (ev) => {\n    console.log('password():', ev.target.value)\n    this.setState({ password: ev.target.value})\n  }\n\n  handleSubmit = (ev) => {\n    ev.preventDefault(); //stop the form submit from reloading the page\n    //send the secret content to the parent component so it can submit it\n    //to the parent backend\n    this.props.onLoginSubmit( this.state.email, this.state.password )\n  }\n\n  render(){\n    return(\n      <div className=\"login-wrapper\">\n       <Form onSubmit={this.handleSubmit}>\n          <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n             <Form.Label>Email address</Form.Label>\n             <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.username}/>\n             <Form.Text className=\"text-muted\">\n                Inut.\n             </Form.Text>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPassword\">\n             <Form.Label>Password</Form.Label>\n             <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.password}/>\n          </Form.Group>\n          <Form.Group controlId=\"formBasicCheckbox\">\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n          Submit\n          </Button>\n       </Form>\n     </div>\n    )\n\n  } // end render\n\n} //User form\n\n\nexport default Login\n","\nimport React, {\n    useEffect,\n    useRef,\n    useState\n} from 'react';\nimport '../App.css';\nimport '../dashboard.rtl.css';\nimport '../dashboard.rtl.css';\nimport axios from 'axios';\nimport PlantStatus from './PlantStatus'\nimport Reports from './Reports'\nimport PlantDetails from './PlantDetails'\nimport Register from './Register'\nimport {\n    Link,\n    withRouter\n} from \"react-router-dom\";\nimport DataCenter from './DataCenter'\nimport ThreeD from './ThreeD'\nimport GaugeChart from 'react-gauge-chart'\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport socketIOClient from \"socket.io-client\";\nimport Login from './Login.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Redirect\n} from 'react-router-dom';\n\n\n\n//set URL for post and get requests\nconst NODE_PLANTS_BASE_URL = 'https://plant-owl.herokuapp.com/plants/601b72c7ebfc916662a038f3';\nconst NODE_PLANTS_POST_URL = 'https://plant-owl.herokuapp.com/login';\nconst NODE_REGISTER_POST_URL = 'https://plant-owl.herokuapp.com/register';\n\n\n\n\nclass Plants extends React.Component {\n\n  //set state\n  state = {\n      data: [],\n      plants: [],\n      plantData: [],\n\n      //Moisture - %\n      moisture: [],\n      moistureDay: [],\n      moistureMonth: [],\n\n      //Moisture2 - %\n      moisture2: [],\n      moisture2Day: [],\n      moisture2Month: [],\n\n      //temperature - c\n      temperature: [],\n      temperatureDay: [],\n      temperatureMonth: [],\n\n      //watered - y/n (boolean)\n      watered: [],\n      wateredDay: [],\n      wateredMonth: [],\n\n      // WaterLevel - Leters\n      waterLevel: [],\n      waterLevelDay: [],\n      waterLevelMonth: [],\n\n      // Timestamp for readings\n      date: [],\n      dateDay: [],\n      dateMonth: [],\n\n      //Set Authorization token\n      token: \"\",\n      setToken: \"\",\n\n      //Current reading\n      currentMoisture: [], // - Current moisture %\n      currentTemperature: [], // - Current temprature (% out of 40c)\n      currentWatered: [], // - Boolean\n      currentDate: [], // - Timestamp\n      currentWaterLevel: [], // - Water level % out of 4L\n\n      //current time\n      curTime: new Date().toLocaleString(),\n\n    }//end set state;\n\n\n    //getData function\n    getData = () => {\n      //save jwt authentification code\n      const token = localStorage.getItem('jwtToken'); // retrieve token\n      axios.defaults.headers.common['Authorization'] = token\n      console.log('token', token)\n      axios.get(NODE_PLANTS_BASE_URL, {\n        headers: {\n            'Authorization': token\n        }\n      })\n      .then((res) => {\n        this.setState({\n          plants: res.data,\n          plantData: res.data.data\n        }) //save to state\n\n          //moisture\n        const moisture = []\n        const moistureMonth = []\n        const moistureDay = []\n\n        //moisture2\n        const moisture2 = []\n        const moisture2Month = []\n        const moisture2Day = []\n\n        //temprature\n        const temperature = []\n        const temperatureMonth = []\n        const temperatureDay = []\n\n        //watered\n        const watered = []\n        const wateredMonth = []\n        const wateredDay = []\n\n        //date\n        const date = []\n        const dateMonth = []\n        const dateDay = []\n\n        //waterLevel\n        const waterLevel = []\n        const waterLevelMonth = []\n        const waterLevelDay = []\n\n\n\n        //current readings\n        let current_moisture = \"\"\n        let current_moisture2 = \"\"\n        let current_temperature = \"\"\n        let current_watered = \"\"\n        let current_date = \"\"\n        let current_waterlevel = \"\"\n\n        //date readings\n        const day = new Date().getDay()\n        var month = new Date().getMonth() + 1\n\n        //values to array\n        this.state.plantData.map(data => {\n            return (\n              waterLevel.push(data.waterLevel),\n              moisture.push(data.moisture),\n              moisture2.push(data.moisture2),\n              temperature.push(data.temperature),\n              watered.push(data.watered),\n              date.push(data.createdAt)\n\n            )\n        })\n\n        //set token\n        const token = localStorage.getItem('jwtToken'); // retrieve token\n        axios.defaults.headers.common['Authorization'] = token\n\n        //set current moisture\n        current_moisture = moisture[moisture.length - 1]\n        current_moisture = current_moisture / 100\n        //set current moisture\n        current_moisture2 = moisture2[moisture2.length - 1]\n        current_moisture2 = current_moisture2 / 100\n        //set current Temprature\n        current_temperature = temperature[temperature.length - 1]\n        current_temperature = (current_temperature / 40)\n        //set current watered\n        current_watered = watered[watered.length - 1]\n        //set current length\n        current_date = date[date.length - 1]\n        //set waterlevel\n        current_waterlevel = waterLevel[waterLevel.length - 1]\n        current_waterlevel = current_waterlevel / 4\n\n        let stateMonth = \"\"\n        let stateDay = \"\"\n        //values to array\n        this.state.plantData.map(data => {\n          stateMonth = new Date(data.createdAt)\n          stateMonth = stateMonth.getMonth() + 1\n\n          if (stateMonth === month) {\n            return (\n              waterLevelMonth.push(data.waterLevel),\n              moistureMonth.push(data.moisture),\n              moisture2Month.push(data.moisture2),\n              temperatureMonth.push(data.temperature),\n              wateredMonth.push(data.watered),\n              dateMonth.push(data.createdAt)\n            ) //return\n          } //if\n        }) //state\n\n          this.state.plantData.map(data => {\n              stateDay = new Date(data.createdAt)\n              stateDay = stateDay.getDay()\n              stateMonth = new Date(data.createdAt)\n              stateMonth = stateMonth.getMonth() + 1\n\n\n              if (stateDay === day && stateMonth === month) {\n                  return (\n                      waterLevelDay.push(data.waterLevel),\n                      moistureDay.push(data.moisture),\n                      moisture2Day.push(data.moisture2),\n                      temperatureDay.push(data.temperature),\n                      wateredDay.push(data.watered),\n                      dateDay.push(data.createdAt)\n                  ) //return\n              } //if\n          }) //state\n\n\n\n          this.setState({\n            plants: res.data,\n            plantData: res.data.data,\n            moisture: moisture,\n            moisture2: moisture2,\n            temperature: temperature,\n            temperatureDay: temperatureDay,\n            temperatureMonth: temperatureMonth,\n            watered: watered,\n            date: date,\n            currentMoisture: current_moisture,\n            currentMoisture2: current_moisture2,\n            currentTemperature: current_temperature,\n            currentWatered: current_watered,\n            currentDate: current_date,\n            waterLevel: waterLevel,\n            currentWaterLevel: current_waterlevel,\n            waterLevelMonth: waterLevelMonth,\n            moistureMonth: moistureMonth,\n            moisture2Month: moisture2Month,\n            wateredMonth: wateredMonth,\n            dateMonth: dateMonth,\n            waterLevelDay: waterLevelDay,\n            moistureDay: moistureDay,\n            moisture2Day: moisture2Day,\n            wateredDay: wateredDay,\n            dateDay: dateDay,\n            token: token,\n            data: res.data\n          }) //save to state\n\n\n      })//end then\n     .catch(console.warn);\n   }//end Get data\n\n\n\n\n  //run this when component is on this page\n  componentDidMount() {\n    this.getData()\n\n\n    setTimeout(this.getData(), 10000)\n  }//end componentDidMount\n\n\n  //Login user\n  saveLogin = (email, password) => {\n    // POST the secret data to the Rails backend:\n    axios.post(NODE_PLANTS_POST_URL, {\n        email: email,\n        password: password\n    })//end .post\n    .then((res) => {\n        const token = 'Bearer ' + res.data.token;\n        console.log(\"token\", token)\n        axios.defaults.headers.common['Authorization'] = token;\n        localStorage.setItem('jwtToken', token);\n\n        this.setState({\n            token: [token]\n        });\n          window.location.href = \"https://reecen96.github.io/plantowl-react-frontend/#/PlantStatus\";\n    }) // .then\n        .catch(console.warn);\n\n  } // saveSecret\n\n  //Register user for new account\n  saveRegister = (email, password, username) => {\n    // POST the secret data to the Rails backend:\n    axios.post(NODE_REGISTER_POST_URL, {\n      email: email,\n      password: password,\n      username: username\n    })\n    .then((res) => {\n        console.log(res)\n    }) // .then\n    .catch(console.warn)\n  } // saveSecret\n\n\n  render() {\n\n    //Event listener - log out\n    document.addEventListener('click', (evt) => {\n      if (evt.target.closest('#Logout')) {\n          console.log(\"Logged out!\")\n          axios.defaults.headers.common['Authorization'] = \"\";\n          localStorage.setItem('jwtToken', 0);\n          window.location.href = \"https://reecen96.github.io/plantowl-react-frontend/#/Login\";\n\n\n      }\n    })//end event listener\n\n    const data = this.state.plantData\n    var index = 0\n\n    setTimeout(check, 2000);\n    var check = function() {\n      if (this.state.token === \"\") {\n        window.location.href = \"https://reecen96.github.io/plantowl-react-frontend/#/Login\";\n        return\n    }// end check()\n\n  }//end render\n\n  return (\n    <div id = \"mainbox\">\n     <div>\n        <div>\n           <header className=\"navbar fixed-top flex-md-nowrap p-0 shadow\" style={{backgroundColor: '#42c48e'}}>\n           <div id=\"navHeader\">\n              <img id=\"header\" src=\"https://i.ibb.co/CBgswKy/Screen-Shot-2021-02-02-at-7-48-51-am.png\" alt=\"plant owl logo\" />\n           </div>\n           <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap\">\n                 <a className=\"nav-link\" id=\"Logout\">Logout</a>\n              </li>\n           </ul>\n           </header>\n           <div className=\"container-fluid\">\n              <div className=\"row\">\n                 <nav id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n                    <div className=\"position-sticky pt-3\">\n                       <ul class=\"nav flex-column sidebar-nav\">\n\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/PlantStatus\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2zM3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.389.389 0 0 0-.029-.518z\"/>\n                                 <path fill-rule=\"evenodd\" d=\"M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.945 11.945 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0z\"/>\n                                </svg>\n                                Plant status\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/DataCenter\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\n                                   <path fill-rule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"/>\n                                </svg>\n                                Data center\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/plantdetails\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-flower3\" viewBox=\"0 0 16 16\">\n                                   <path d=\"M11.424 8c.437-.052.811-.136 1.04-.268a2 2 0 0 0-2-3.464c-.229.132-.489.414-.752.767C9.886 4.63 10 4.264 10 4a2 2 0 1 0-4 0c0 .264.114.63.288 1.035-.263-.353-.523-.635-.752-.767a2 2 0 0 0-2 3.464c.229.132.603.216 1.04.268-.437.052-.811.136-1.04.268a2 2 0 1 0 2 3.464c.229-.132.489-.414.752-.767C6.114 11.37 6 11.736 6 12a2 2 0 1 0 4 0c0-.264-.114-.63-.288-1.035.263.353.523.635.752.767a2 2 0 1 0 2-3.464c-.229-.132-.603-.216-1.04-.268zM9 4a1.468 1.468 0 0 1-.045.205c-.039.132-.1.295-.183.484a12.88 12.88 0 0 1-.637 1.223L8 6.142a21.73 21.73 0 0 1-.135-.23 12.88 12.88 0 0 1-.637-1.223 4.216 4.216 0 0 1-.183-.484A1.473 1.473 0 0 1 7 4a1 1 0 1 1 2 0zM3.67 5.5a1 1 0 0 1 1.366-.366 1.472 1.472 0 0 1 .156.142c.094.1.204.233.326.4.245.333.502.747.742 1.163l.13.232a21.86 21.86 0 0 1-.265.002 12.88 12.88 0 0 1-1.379-.06 4.214 4.214 0 0 1-.51-.083 1.47 1.47 0 0 1-.2-.064A1 1 0 0 1 3.67 5.5zm1.366 5.366a1 1 0 0 1-1-1.732c.001 0 .016-.008.047-.02.037-.013.087-.028.153-.044.134-.032.305-.06.51-.083a12.88 12.88 0 0 1 1.379-.06c.09 0 .178 0 .266.002a21.82 21.82 0 0 1-.131.232c-.24.416-.497.83-.742 1.163a4.1 4.1 0 0 1-.327.4 1.483 1.483 0 0 1-.155.142zM9 12a1 1 0 0 1-2 0 1.476 1.476 0 0 1 .045-.206c.039-.131.1-.294.183-.483.166-.378.396-.808.637-1.223L8 9.858l.135.23c.241.415.47.845.637 1.223.083.19.144.352.183.484A1.338 1.338 0 0 1 9 12zm3.33-6.5a1 1 0 0 1-.366 1.366 1.478 1.478 0 0 1-.2.064c-.134.032-.305.06-.51.083-.412.045-.898.061-1.379.06-.09 0-.178 0-.266-.002l.131-.232c.24-.416.497-.83.742-1.163a4.1 4.1 0 0 1 .327-.4c.046-.05.085-.086.114-.11.026-.022.04-.03.041-.032a1 1 0 0 1 1.366.366zm-1.366 5.366a1.494 1.494 0 0 1-.155-.141 4.225 4.225 0 0 1-.327-.4A12.88 12.88 0 0 1 9.74 9.16a22 22 0 0 1-.13-.232l.265-.002c.48-.001.967.015 1.379.06.205.023.376.051.51.083.066.016.116.031.153.044l.048.02a1 1 0 1 1-1 1.732zM8 9a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/>\n                                </svg>\n                                Plant details\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/reports\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\n                                   <path d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\n                                </svg>\n                                Reports\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/ThreeD\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\n                                   <path d=\"M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5 8 5.961 14.154 3.5 8.186 1.113zM15 4.239l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z\"/>\n                                </svg>\n                                3D visulisation\n                             </a>\n                          </li>\n                       </ul>\n                    </div>\n                 </nav>\n                 <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n                    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                       <h1 className=\"h2\">Dashboard</h1>\n                       <div className=\"btn-toolbar mb-2 mb-md-0\">\n                          <div className=\"btn-group me-2\">\n                             <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Share</button>\n                             <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Export</button>\n                          </div>\n                          <button type=\"button\" className=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n                          <span data-feather=\"calendar\" />\n                          This week\n                          </button>\n                       </div>\n                    </div>\n                    <div id=\"renderroute\">\n                    <Router>\n                       <Switch>\n                          <Route path=\"/PlantStatus\" exact component={() =>\n                          <PlantStatus data = {this.state} />\n                          } />\n                          <Route path=\"/Login\" exact component={() =>\n                          <Login onLoginSubmit={ this.saveLogin } />\n                          } />\n                          <Route path=\"/ThreeD\" exact component={() =>\n                          <ThreeD data = {this.state} />\n                          } />\n                          <Route path=\"/DataCenter\" exact component={() =>\n                          <DataCenter data = {this.state} />\n                          } />\n                          <Route path=\"/PlantDetails\" exact component={() =>\n                          <PlantDetails data = {this.state} />\n                          } />\n                          <Route path=\"/Reports\" exact component={() =>\n                          <Reports data = {this.state} />\n                          } />\n                          <Route path=\"/Register\" exact component={() =>\n                          <Register onRegisterSubmit={ this.saveRegister } />\n                          } />\n                       </Switch>\n                    </Router>\n                    </div>\n                    <canvas className=\"my-4 w-100\" id=\"myChart\" width={900} height={380} />\n                    <div id= \"datapage\">\n                    <h2>Plant date</h2>\n                    <div className=\"table-responsive\">\n                       <table className=\"table table-striped table-sm\">\n                          <thead>\n                             <tr>\n                                <th> # </th>\n                                <th>Post date</th>\n                                <th>temperature</th>\n                                <th>moisture - Plant 1</th>\n                                <th>moisture - Plant 2</th>\n                                <th>was watered</th>\n                                <th>water remaining</th>\n                             </tr>\n                          </thead>\n                          <tbody>\n                             {data.map((item) => (\n                             <tr>\n                                <td>{index = index + 1}</td>\n                                <td>{item.createdAt}</td>\n                                <td>{item.temperature}c</td>\n                                <td>{item.moisture}%</td>\n                                <td>{item.moisture2}%</td>\n                                <td>{item.watered}</td>\n                                <td>{item.waterLevel}L</td>\n                             </tr>\n                             ))}\n                          </tbody>\n                       </table>\n                    </div>\n                    </div>\n                 </main>\n              </div>\n           </div>\n        </div>\n     </div>\n    </div>\n\n  );//end retuen\n\n} // render\n\n} //plant export\n\n\nexport default Plants;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Plants from './components/Plants';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nexport { default as DataCenter } from \"./components/DataCenter\";\nexport { default as PlantStatus } from \"./components/PlantStatus\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Plants />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}