[{"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/reportWebVitals.js":"1","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/App.js":"2","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/index.js":"3","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Plants.js":"4","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantStatus.js":"5","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantDetails.js":"6","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Reports.js":"7","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/DataCenter.js":"8","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Login.js":"9","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Register.js":"10","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/ThreeD.js":"11"},{"size":362,"mtime":1611810171437,"results":"12","hashOfConfig":"13"},{"size":528,"mtime":1611810171425,"results":"14","hashOfConfig":"13"},{"size":696,"mtime":1612330460428,"results":"15","hashOfConfig":"13"},{"size":20245,"mtime":1612476409062,"results":"16","hashOfConfig":"13"},{"size":3488,"mtime":1612476398524,"results":"17","hashOfConfig":"13"},{"size":1420,"mtime":1612476414564,"results":"18","hashOfConfig":"13"},{"size":3009,"mtime":1612476390974,"results":"19","hashOfConfig":"13"},{"size":5855,"mtime":1612476420956,"results":"20","hashOfConfig":"13"},{"size":1693,"mtime":1612422884157,"results":"21","hashOfConfig":"13"},{"size":2991,"mtime":1612392776531,"results":"22","hashOfConfig":"13"},{"size":1893,"mtime":1612423007105,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1i9x4tr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/reportWebVitals.js",[],["55","56"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/App.js",[],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/index.js",[],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Plants.js",["57","58","59","60","61","62","63","64","65","66","67","68"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantStatus.js",[],["69","70"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantDetails.js",[],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Reports.js",["71","72","73","74","75","76","77","78","79"],"import React from 'react';\nimport GaugeChart from 'react-gauge-chart'\nimport { Line } from \"react-chartjs-2\";\n\n\n\n\nexport default class App extends React.Component {\n\nstate = {\ndate: this.props.date,\nmoisture: this.props.moisture,\ntemperature: this.props.temprature\n}\n\nrender() {\n\n  //setting props data\n  const {\n      temperature,\n      moisture,\n      date,\n      dateDay,\n      dateMonth,\n      waterLevel,\n      temperatureDay,\n      temperatureMonth,\n      wateredMonth,\n      wateredDay,\n      watered,\n      moisture2\n  } = this.props.data\n\n  //Finding the average temprature(formula)\n  const calculation = () => {\n      let total = 0;\n      for (var i = 0; i < temperature.length; i++) {\n          total += temperature[i];\n      }\n      var avg = total / temperature.length;\n  }\n\n  //setting dataset for graph\n  const data = {\n      labels: date,\n      datasets: [{\n              label: \"Temprature\",\n              data: temperature,\n              fill: true,\n              backgroundColor: \"rgba(75,192,192,0.2)\",\n              borderColor: \"rgba(75,192,192,1)\"\n          },\n          {\n              label: \"Soil moisture plant 1\",\n              data: moisture,\n              fill: false,\n              borderColor: \"#742774\"\n          },\n          {\n              label: \"Soil moisture plant 2\",\n              data: moisture2,\n              fill: false,\n              borderColor: \"#742774\"\n          },\n          {\n              label: \"Water Level\",\n              data: waterLevel,\n              fill: false,\n              borderColor: \"yellow\"\n          },\n          {\n              label: \"Plant watered\",\n              data: watered,\n              fill: false,\n              borderColor: \"green\"\n          }\n      ]\n  };\n\n  //return HTML\n  return (\n\n    <div className=\"App\">\n       <h1 id=\"heading\"> Reports </h1>\n       <div id=\"reportschart\">\n          <Line data={data} />\n       </div>\n       <div  id=\"reportstable\">\n          <h1> Plant Stats </h1>\n          <table class=\"table\">\n             <thead>\n                <tr>\n                   <th scope=\"col\">#</th>\n                   <th scope=\"col\">First</th>\n                   <th scope=\"col\">Last</th>\n                   <th scope=\"col\">Handle</th>\n                </tr>\n             </thead>\n             <tbody>\n                <tr>\n                   <th scope=\"row\">1</th>\n                   <td>Mark</td>\n                   <td>Otto</td>\n                   <td>@mdo</td>\n                </tr>\n                <tr>\n                   <th scope=\"row\">2</th>\n                   <td>Jacob</td>\n                   <td>Thornton</td>\n                   <td>@fat</td>\n                </tr>\n                <tr>\n                   <th scope=\"row\">3</th>\n                   <td colspan=\"2\">Larry the Bird</td>\n                   <td>@twitter</td>\n                </tr>\n             </tbody>\n          </table>\n       </div>\n    </div>\n\n    )\n  }\n}\n\n//\n//\n// localstorage.setitem(\"string\" , token)  localstorage.getitem(\"string\" , token)\n","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/DataCenter.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],"import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport {Bar} from 'react-chartjs-2';\nimport Button from 'react-bootstrap/Button';\nimport SplitButton from 'react-bootstrap/SplitButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\n\n\n\n\nexport default class App extends React.Component {\n\n  //Set state\n  state = {\n     isActive: false,\n     temperature:  this.props.data.temperature,\n     moisture:  this.props.data.moisture,\n     date:  this.props.data.date,\n     waterLevel:  this.props.data.waterLevel,\n     watered: this.props.data.watered\n   }\n\n\n   componentDidMount(){\n\n   //Click handler for drop down menu\n   //Day\n   document.addEventListener('click', (evt) => {\n      if (evt.target.closest('#Day')) {\n        console.log('#Day')\n        this.setState({date:this.props.data.dateDay, temperature: this.props.data.temperatureDay, moisture: this.props.data.moistureDay, waterLevel: this.props.data.waterLevelDay, watered: this.props.wateredDay\n        })\n       return;\n    }\n  })//end click handler\n\n  //month\n  document.addEventListener('click', (evt) => {\n    if (evt.target.closest('#Month')) {\n      this.setState({date:this.props.data.dateMonth, temperature: this.props.data.temperatureMonth, moisture: this.props.data.moistureMonth, waterLevel: this.props.data.waterLevelMonth, watered: this.props.wateredMonth})\n      console.log('#Month')\n      return;\n    }\n  })// end click handler\n\n  document.addEventListener('click', (evt) => {\n    if (evt.target.closest('#All')) {\n    this.setState({date:this.props.data.date, temperature: this.props.data.temperature, moisture: this.props.data.moisture, waterLevel: this.props.data.waterLevel, watered: this.props.watered})\n    console.warn('#All');\n    return;\n    }\n  })//end click handler\n\n}//End componentDidMount\n\nrender() {\n  //pulling props.data\n  const {moisture, moistureDay, moistureMonth, temperature, temperatureDay, temperatureMonth, watered, wateredDay, wateredMonth, date, dateDay, dateMonth, waterLevel, waterLevelDay, waterLevelMonth} = this.props.data\n\n  //population data for graphs\n  //temprature data\n  const temperatureData = {\n    labels: this.state.date,\n    datasets: [\n      {\n        label: 'Rainfall',\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.temperature\n      }\n    ]\n  }\n\n  //moisture data\n  const moistureData = {\n    labels: this.state.date,\n    datasets: [\n      {\n        label: 'Rainfall',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.moisture\n      }\n    ]\n  }\n\n  //water data\n  const waterData = {\n    labels: date,\n    datasets: [\n      {\n        label: 'Has been watered water',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.watered\n      }\n    ]\n  }\n\n  //water level data\n  const waterLevelData = {\n    labels: date,\n    datasets: [\n      {\n        label: 'Remaining water',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: this.state.waterLevel\n      }\n    ]\n  }\n\n\n\n  //return JSX\n  return (\n    <div class=\"container\">\n\n    <h1 id=\"heading\"> Data center </h1>\n\n    <div id=\"datacenter\">\n      <div class=\"row row-cols-2\">\n        <div class=\"col\">\n          <div class=\"p-3 border bg-light\">\n            <div id=\"BarChart\">\n              <Bar\n                data={temperatureData}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Hourly temperature',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"p-3 border bg-light\">\n            <div id=\"LineGraph\">\n              <Line\n                data={moistureData}\n                options={{\n                  title:{\n                    display:true,\n                    text:'Hourly moisture',\n                    fontSize:20\n                  },\n                  legend:{\n                    display:true,\n                    position:'right'\n                  }\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"col\">\n          <div class=\"p-3 border bg-light\">\n            <Line\n              data={waterLevelData}\n              options={{\n                title:{\n                  display:true,\n                  text:'Water level available',\n                  fontSize:20\n                },\n                legend:{\n                  display:true,\n                  position:'right'\n                }\n              }}\n            />\n          </div>\n        </div>\n      <div class=\"col\">\n        <div class=\"p-3 border bg-light\">\n          <Line\n            data={waterData}\n            options={{\n              title:{\n                display:true,\n                text:'Plant has been watered',\n                fontSize:20\n              },\n              legend:{\n                display:true,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n        </div>\n        </div>\n      </div>\n      <br/>\n      <DropdownButton id=\"dropdown-basic-button\" title=\"Data period\">\n      <Dropdown.Item id=\"Day\">Day</Dropdown.Item>\n      <Dropdown.Item id=\"Month\">Month</Dropdown.Item>\n      <Dropdown.Item id=\"All\">All</Dropdown.Item>\n      </DropdownButton>\n      </div>\n    )//end return\n  }//end render\n}//end component\n",["96","97"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Login.js",["98","99"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Register.js",["100","101"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass Register extends React.Component{\n\n\n  state = {\n    email: '',\n    password:'',\n    conpassword: '',\n    username:''\n  };\n\n  email = (ev) => {\n    console.log('email():', ev.target.value)\n    this.setState({ email: ev.target.value})\n  }\n  password = (ev) => {\n    console.log('password():', ev.target.value)\n    this.setState({ password: ev.target.value})\n  }\n  username = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ username: ev.target.value})\n  }\n  conpassword = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ conspassword: ev.target.value})\n  }\n\n  handleSubmit = (ev) => {\n\n      console.log()\n    ev.preventDefault(this.state.email, this.state.password, this.state.username); //stop the form submit from reloading the page\n    //send the secret content to the parent component so it can submit it\n    //to the parent backend\n    this.props.onRegisterSubmit( this.state.email, this.state.password, this.state.username)\n\n\n  }\n\n  render(){\n\n    return(\n      <div className=\"login-wrapper\">\n      <Form onSubmit={this.handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.email}/>\n        <Form.Text className=\"text-muted\">\n\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter username\" onChange={this.username}/>\n        <Form.Text className=\"text-muted\">\n\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.password}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Confirm passowrd</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.conspassword}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n      </Form>\n      </div>\n\n\n    )\n\n\n  } // render\n\n\n\n} //User form\n\n\nexport default Register\n\n\n\n//\n// <form onSubmit={this.handleSubmit}>\n//   <h3> Name </h3>\n//   <textarea onChange={this.username}/>\n//   <br />\n//   <h3> Email </h3>\n//   <textarea onChange={this.email}/>\n//   <br />\n//   <h4> Password </h4>\n//   <textarea onChange={this.password}/>\n//   <br />\n//   <h4> Confirm Password </h4>\n//   <textarea onChange={this.conpassword}/>\n//   <br />\n//\n//   <button> Create account </button>\n// </form>\n",["102","103"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/ThreeD.js",["104","105","106","107","108","109","110"],"import React from 'react';\nimport Plot from 'react-plotly.js'\n\n\nclass ThreeD extends React.Component {\n\n  //set state\n  state = {\n      index: 0\n  }\n\n  render() {\n    //set props.data\n    const {\n        temperature,\n        moisture,\n        date,\n        dateDay,\n        dateMonth,\n        waterLevel,\n        temperatureDay,\n        temperatureMonth,\n        wateredMonth,\n        wateredDay,\n        watered,\n        moisture2\n    } = this.props.data\n    \n    console.log(\"temprature\", temperature)\n\n    //set index values for graphing\n    const index = []\n    var i = 1\n    date.map(data => {\n        i = i + 1\n        index.push(i)\n\n    })\n\n\n    return (\n      <Plot\n        data={[\n          {\n            x: index,\n            y: date,\n            z: temperature,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'temperature',\n          },\n          {\n            x: index,\n            y: date,\n            z: moisture,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'moisture plant 1',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: waterLevel,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'Water Level',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: moisture2,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'moisture plant 2',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: watered,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'plants were watered',\n\n          },\n        ]}\n        layout={{\n          height: 800,\n          width: 1200,\n          title: `Plant data`,\n        }}\n        onRelayout={(figure) => console.log(figure)}\n      />\n    );//return\n  }//render\n}//react componenet\n\n\nexport default ThreeD;\n",["111","112"],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":5,"nodeType":"119","messageId":"120","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"121","line":4,"column":5,"nodeType":"119","messageId":"120","endLine":4,"endColumn":11},{"ruleId":"117","severity":1,"message":"122","line":5,"column":5,"nodeType":"119","messageId":"120","endLine":5,"endColumn":13},{"ruleId":"117","severity":1,"message":"123","line":16,"column":5,"nodeType":"119","messageId":"120","endLine":16,"endColumn":9},{"ruleId":"117","severity":1,"message":"124","line":17,"column":5,"nodeType":"119","messageId":"120","endLine":17,"endColumn":15},{"ruleId":"117","severity":1,"message":"125","line":21,"column":8,"nodeType":"119","messageId":"120","endLine":21,"endColumn":18},{"ruleId":"117","severity":1,"message":"126","line":27,"column":8,"nodeType":"119","messageId":"120","endLine":27,"endColumn":22},{"ruleId":"117","severity":1,"message":"127","line":31,"column":5,"nodeType":"119","messageId":"120","endLine":31,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":197,"column":39,"nodeType":"130","messageId":"131","endLine":197,"endColumn":41},{"ruleId":"128","severity":1,"message":"129","line":213,"column":41,"nodeType":"130","messageId":"131","endLine":213,"endColumn":43},{"ruleId":"132","severity":1,"message":"133","line":336,"column":16,"nodeType":"119","messageId":"134","endLine":336,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":355,"column":18,"nodeType":"137","endLine":355,"endColumn":54},{"ruleId":"113","replacedBy":"138"},{"ruleId":"115","replacedBy":"139"},{"ruleId":"117","severity":1,"message":"125","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":18},{"ruleId":"117","severity":1,"message":"140","line":23,"column":7,"nodeType":"119","messageId":"120","endLine":23,"endColumn":14},{"ruleId":"117","severity":1,"message":"141","line":24,"column":7,"nodeType":"119","messageId":"120","endLine":24,"endColumn":16},{"ruleId":"117","severity":1,"message":"142","line":26,"column":7,"nodeType":"119","messageId":"120","endLine":26,"endColumn":21},{"ruleId":"117","severity":1,"message":"143","line":27,"column":7,"nodeType":"119","messageId":"120","endLine":27,"endColumn":23},{"ruleId":"117","severity":1,"message":"144","line":28,"column":7,"nodeType":"119","messageId":"120","endLine":28,"endColumn":19},{"ruleId":"117","severity":1,"message":"145","line":29,"column":7,"nodeType":"119","messageId":"120","endLine":29,"endColumn":17},{"ruleId":"117","severity":1,"message":"146","line":35,"column":9,"nodeType":"119","messageId":"120","endLine":35,"endColumn":20},{"ruleId":"117","severity":1,"message":"147","line":40,"column":11,"nodeType":"119","messageId":"120","endLine":40,"endColumn":14},{"ruleId":"117","severity":1,"message":"148","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"149","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":19},{"ruleId":"117","severity":1,"message":"150","line":59,"column":10,"nodeType":"119","messageId":"120","endLine":59,"endColumn":18},{"ruleId":"117","severity":1,"message":"151","line":59,"column":20,"nodeType":"119","messageId":"120","endLine":59,"endColumn":31},{"ruleId":"117","severity":1,"message":"152","line":59,"column":33,"nodeType":"119","messageId":"120","endLine":59,"endColumn":46},{"ruleId":"117","severity":1,"message":"153","line":59,"column":48,"nodeType":"119","messageId":"120","endLine":59,"endColumn":59},{"ruleId":"117","severity":1,"message":"142","line":59,"column":61,"nodeType":"119","messageId":"120","endLine":59,"endColumn":75},{"ruleId":"117","severity":1,"message":"143","line":59,"column":77,"nodeType":"119","messageId":"120","endLine":59,"endColumn":93},{"ruleId":"117","severity":1,"message":"154","line":59,"column":95,"nodeType":"119","messageId":"120","endLine":59,"endColumn":102},{"ruleId":"117","severity":1,"message":"145","line":59,"column":104,"nodeType":"119","messageId":"120","endLine":59,"endColumn":114},{"ruleId":"117","severity":1,"message":"144","line":59,"column":116,"nodeType":"119","messageId":"120","endLine":59,"endColumn":128},{"ruleId":"117","severity":1,"message":"140","line":59,"column":136,"nodeType":"119","messageId":"120","endLine":59,"endColumn":143},{"ruleId":"117","severity":1,"message":"141","line":59,"column":145,"nodeType":"119","messageId":"120","endLine":59,"endColumn":154},{"ruleId":"117","severity":1,"message":"155","line":59,"column":156,"nodeType":"119","messageId":"120","endLine":59,"endColumn":166},{"ruleId":"117","severity":1,"message":"156","line":59,"column":168,"nodeType":"119","messageId":"120","endLine":59,"endColumn":181},{"ruleId":"117","severity":1,"message":"157","line":59,"column":183,"nodeType":"119","messageId":"120","endLine":59,"endColumn":198},{"ruleId":"113","replacedBy":"158"},{"ruleId":"115","replacedBy":"159"},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"160","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":17},{"ruleId":"117","severity":1,"message":"122","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"160","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":17},{"ruleId":"113","replacedBy":"161"},{"ruleId":"115","replacedBy":"162"},{"ruleId":"117","severity":1,"message":"140","line":18,"column":9,"nodeType":"119","messageId":"120","endLine":18,"endColumn":16},{"ruleId":"117","severity":1,"message":"141","line":19,"column":9,"nodeType":"119","messageId":"120","endLine":19,"endColumn":18},{"ruleId":"117","severity":1,"message":"142","line":21,"column":9,"nodeType":"119","messageId":"120","endLine":21,"endColumn":23},{"ruleId":"117","severity":1,"message":"143","line":22,"column":9,"nodeType":"119","messageId":"120","endLine":22,"endColumn":25},{"ruleId":"117","severity":1,"message":"144","line":23,"column":9,"nodeType":"119","messageId":"120","endLine":23,"endColumn":21},{"ruleId":"117","severity":1,"message":"145","line":24,"column":9,"nodeType":"119","messageId":"120","endLine":24,"endColumn":19},{"ruleId":"128","severity":1,"message":"163","line":34,"column":19,"nodeType":"130","messageId":"164","endLine":34,"endColumn":21},{"ruleId":"113","replacedBy":"165"},{"ruleId":"115","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'GaugeChart' is defined but never used.","'socketIOClient' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-use-before-define","'check' was used before it was defined.","usedBeforeDefined","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["167"],["168"],"'dateDay' is assigned a value but never used.","'dateMonth' is assigned a value but never used.","'temperatureDay' is assigned a value but never used.","'temperatureMonth' is assigned a value but never used.","'wateredMonth' is assigned a value but never used.","'wateredDay' is assigned a value but never used.","'calculation' is assigned a value but never used.","'avg' is assigned a value but never used.","'Button' is defined but never used.","'SplitButton' is defined but never used.","'moisture' is assigned a value but never used.","'moistureDay' is assigned a value but never used.","'moistureMonth' is assigned a value but never used.","'temperature' is assigned a value but never used.","'watered' is assigned a value but never used.","'waterLevel' is assigned a value but never used.","'waterLevelDay' is assigned a value but never used.","'waterLevelMonth' is assigned a value but never used.",["167"],["168"],"'PropTypes' is defined but never used.",["167"],["168"],"Array.prototype.map() expects a return value from arrow function.","expectedInside",["167"],["168"],"no-global-assign","no-unsafe-negation"]