[{"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/reportWebVitals.js":"1","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/App.js":"2","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/index.js":"3","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Plants.js":"4","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantStatus.js":"5","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantDetails.js":"6","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Reports.js":"7","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/DataCenter.js":"8","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Login.js":"9","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Register.js":"10","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/ThreeD.js":"11"},{"size":362,"mtime":1611810171437,"results":"12","hashOfConfig":"13"},{"size":528,"mtime":1611810171425,"results":"14","hashOfConfig":"13"},{"size":696,"mtime":1612330460428,"results":"15","hashOfConfig":"13"},{"size":19986,"mtime":1612436797054,"results":"16","hashOfConfig":"13"},{"size":4002,"mtime":1612437491602,"results":"17","hashOfConfig":"13"},{"size":1420,"mtime":1612437460479,"results":"18","hashOfConfig":"13"},{"size":3009,"mtime":1612437513750,"results":"19","hashOfConfig":"13"},{"size":5855,"mtime":1612437433171,"results":"20","hashOfConfig":"13"},{"size":1693,"mtime":1612422884157,"results":"21","hashOfConfig":"13"},{"size":2991,"mtime":1612392776531,"results":"22","hashOfConfig":"13"},{"size":1893,"mtime":1612423007105,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1i9x4tr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/reportWebVitals.js",[],["53","54"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/App.js",[],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/index.js",[],["55","56"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Plants.js",["57","58","59","60","61","62","63","64","65","66","67","68"],"\nimport React, {\n    useEffect,\n    useRef,\n    useState\n} from 'react';\nimport '../App.css';\nimport '../dashboard.rtl.css';\nimport '../dashboard.rtl.css';\nimport axios from 'axios';\nimport PlantStatus from './PlantStatus'\nimport Reports from './Reports'\nimport PlantDetails from './PlantDetails'\nimport Register from './Register'\nimport {\n    Link,\n    withRouter\n} from \"react-router-dom\";\nimport DataCenter from './DataCenter'\nimport ThreeD from './ThreeD'\nimport GaugeChart from 'react-gauge-chart'\nimport {\n    HashRouter as Router,\n    Route,\n    Switch\n} from \"react-router-dom\";\nimport socketIOClient from \"socket.io-client\";\nimport Login from './Login.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n    Redirect\n} from 'react-router-dom';\n\n\n\n//set URL for post and get requests\nconst NODE_PLANTS_BASE_URL = 'https://plant-owl.herokuapp.com/plants/601b72c7ebfc916662a038f3';\nconst NODE_PLANTS_POST_URL = 'https://plant-owl.herokuapp.com/login';\nconst NODE_REGISTER_POST_URL = 'https://plant-owl.herokuapp.com/register';\n\n\n\n\nclass Plants extends React.Component {\n\n  //set state\n  state = {\n      data: [],\n      plants: [],\n      plantData: [],\n\n      //Moisture - %\n      moisture: [],\n      moistureDay: [],\n      moistureMonth: [],\n\n      //Moisture2 - %\n      moisture2: [],\n      moisture2Day: [],\n      moisture2Month: [],\n\n      //temperature - c\n      temperature: [],\n      temperatureDay: [],\n      temperatureMonth: [],\n\n      //watered - y/n (boolean)\n      watered: [],\n      wateredDay: [],\n      wateredMonth: [],\n\n      // WaterLevel - Leters\n      waterLevel: [],\n      waterLevelDay: [],\n      waterLevelMonth: [],\n\n      // Timestamp for readings\n      date: [],\n      dateDay: [],\n      dateMonth: [],\n\n      //Set Authorization token\n      token: \"\",\n      setToken: \"\",\n\n      //Current reading\n      currentMoisture: [], // - Current moisture %\n      currentTemperature: [], // - Current temprature (% out of 40c)\n      currentWatered: [], // - Boolean\n      currentDate: [], // - Timestamp\n      currentWaterLevel: [], // - Water level % out of 4L\n\n      //current time\n      curTime: new Date().toLocaleString(),\n\n    }//end set state;\n\n\n    //getData function\n    getData = () => {\n      //save jwt authentification code\n      const token = localStorage.getItem('jwtToken'); // retrieve token\n      axios.defaults.headers.common['Authorization'] = token\n      console.log('token', token)\n      axios.get(NODE_PLANTS_BASE_URL, {\n        headers: {\n            'Authorization': token\n        }\n      })\n      .then((res) => {\n        this.setState({\n          plants: res.data,\n          plantData: res.data.data\n        }) //save to state\n\n          //moisture\n        const moisture = []\n        const moistureMonth = []\n        const moistureDay = []\n\n        //moisture2\n        const moisture2 = []\n        const moisture2Month = []\n        const moisture2Day = []\n\n        //temprature\n        const temperature = []\n        const temperatureMonth = []\n        const temperatureDay = []\n\n        //watered\n        const watered = []\n        const wateredMonth = []\n        const wateredDay = []\n\n        //date\n        const date = []\n        const dateMonth = []\n        const dateDay = []\n\n        //waterLevel\n        const waterLevel = []\n        const waterLevelMonth = []\n        const waterLevelDay = []\n\n\n\n        //current readings\n        let current_moisture = \"\"\n        let current_moisture2 = \"\"\n        let current_temperature = \"\"\n        let current_watered = \"\"\n        let current_date = \"\"\n        let current_waterlevel = \"\"\n\n        //date readings\n        const day = new Date().getDay()\n        var month = new Date().getMonth() + 1\n\n        //values to array\n        this.state.plantData.map(data => {\n            return (\n              waterLevel.push(data.waterLevel),\n              moisture.push(data.moisture),\n              moisture2.push(data.moisture2),\n              temperature.push(data.temperature),\n              watered.push(data.watered),\n              date.push(data.createdAt)\n\n            )\n        })\n\n        //set token\n        const token = localStorage.getItem('jwtToken'); // retrieve token\n        axios.defaults.headers.common['Authorization'] = token\n\n        //set current moisture\n        current_moisture = moisture[moisture.length - 1]\n        current_moisture = current_moisture / 100\n        //set current moisture\n        current_moisture2 = moisture2[moisture2.length - 1]\n        current_moisture2 = current_moisture2 / 100\n        //set current Temprature\n        current_temperature = temperature[temperature.length - 1]\n        current_temperature = (current_temperature / 40)\n        //set current watered\n        current_watered = watered[watered.length - 1]\n        //set current length\n        current_date = date[date.length - 1]\n        //set waterlevel\n        current_waterlevel = waterLevel[waterLevel.length - 1]\n        current_waterlevel = current_waterlevel / 4\n\n        let stateMonth = \"\"\n        let stateDay = \"\"\n        //values to array\n        this.state.plantData.map(data => {\n          stateMonth = new Date(data.createdAt)\n          stateMonth = stateMonth.getMonth() + 1\n\n          if (stateMonth === month) {\n            return (\n              waterLevelMonth.push(data.waterLevel),\n              moistureMonth.push(data.moisture),\n              moisture2Month.push(data.moisture2),\n              temperatureMonth.push(data.temperature),\n              wateredMonth.push(data.watered),\n              dateMonth.push(data.createdAt)\n            ) //return\n          } //if\n        }) //state\n\n          this.state.plantData.map(data => {\n              stateDay = new Date(data.createdAt)\n              stateDay = stateDay.getDay()\n              stateMonth = new Date(data.createdAt)\n              stateMonth = stateMonth.getMonth() + 1\n\n\n              if (stateDay === day && stateMonth === month) {\n                  return (\n                      waterLevelDay.push(data.waterLevel),\n                      moistureDay.push(data.moisture),\n                      moisture2Day.push(data.moisture2),\n                      temperatureDay.push(data.temperature),\n                      wateredDay.push(data.watered),\n                      dateDay.push(data.createdAt)\n                  ) //return\n              } //if\n          }) //state\n\n\n\n          this.setState({\n            plants: res.data,\n            plantData: res.data.data,\n            moisture: moisture,\n            moisture2: moisture2,\n            temperature: temperature,\n            temperatureDay: temperatureDay,\n            temperatureMonth: temperatureMonth,\n            watered: watered,\n            date: date,\n            currentMoisture: current_moisture,\n            currentMoisture2: current_moisture2,\n            currentTemperature: current_temperature,\n            currentWatered: current_watered,\n            currentDate: current_date,\n            waterLevel: waterLevel,\n            currentWaterLevel: current_waterlevel,\n            waterLevelMonth: waterLevelMonth,\n            moistureMonth: moistureMonth,\n            moisture2Month: moisture2Month,\n            wateredMonth: wateredMonth,\n            dateMonth: dateMonth,\n            waterLevelDay: waterLevelDay,\n            moistureDay: moistureDay,\n            moisture2Day: moisture2Day,\n            wateredDay: wateredDay,\n            dateDay: dateDay,\n            token: token,\n            data: res.data\n          }) //save to state\n\n\n      })//end then\n     .catch(console.warn);\n   }//end Get data\n\n\n\n\n  //run this when component is on this page\n  componentDidMount() {\n    this.getData()\n  }//end componentDidMount\n\n\n  //Login user\n  saveLogin = (email, password) => {\n    // POST the secret data to the Rails backend:\n    axios.post(NODE_PLANTS_POST_URL, {\n        email: email,\n        password: password\n    })//end .post\n    .then((res) => {\n        const token = 'Bearer ' + res.data.token;\n        console.log(\"token\", token)\n        axios.defaults.headers.common['Authorization'] = token;\n        localStorage.setItem('jwtToken', token);\n\n        this.setState({\n            token: [token]\n        });\n        window.location.reload(false);\n    }) // .then\n        .catch(console.warn);\n\n  } // saveSecret\n\n  //Register user for new account\n  saveRegister = (email, password, username) => {\n    // POST the secret data to the Rails backend:\n    axios.post(NODE_REGISTER_POST_URL, {\n      email: email,\n      password: password,\n      username: username\n    })\n    .then((res) => {\n        console.log(res)\n    }) // .then\n    .catch(console.warn)\n  } // saveSecret\n\n\n  render() {\n\n    //Event listener - log out\n    document.addEventListener('click', (evt) => {\n      if (evt.target.closest('#Logout')) {\n          console.log(\"Logged out!\")\n          axios.defaults.headers.common['Authorization'] = \"\";\n          localStorage.setItem('jwtToken', 0);\n          window.location.reload(false);\n          return;\n      }\n    })//end event listener\n\n    const data = this.state.plantData\n    var index = 0\n\n    setTimeout(check, 2000);\n    var check = function() {\n      if (this.state.token === \"\") {\n          return <Login onLoginSubmit = {this.saveLogin}/>\n    }// end check()\n\n  }//end render\n\n  return (\n    <div id = \"mainbox\">\n     <div>\n        <div>\n           <header className=\"navbar fixed-top flex-md-nowrap p-0 shadow\" style={{backgroundColor: '#42c48e'}}>\n           <div id=\"navHeader\">\n              <img id=\"header\" src=\"https://i.ibb.co/CBgswKy/Screen-Shot-2021-02-02-at-7-48-51-am.png\" alt=\"plant owl logo\" />\n           </div>\n           <ul className=\"navbar-nav px-3\">\n              <li className=\"nav-item text-nowrap\">\n                 <a className=\"nav-link\" id=\"Logout\">Logout</a>\n              </li>\n           </ul>\n           </header>\n           <div className=\"container-fluid\">\n              <div className=\"row\">\n                 <nav id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\n                    <div className=\"position-sticky pt-3\">\n                       <ul class=\"nav flex-column sidebar-nav\">\n\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/PlantStatus\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\n                                <path d=\"M8 2a.5.5 0 0 1 .5.5V4a.5.5 0 0 1-1 0V2.5A.5.5 0 0 1 8 2zM3.732 3.732a.5.5 0 0 1 .707 0l.915.914a.5.5 0 1 1-.708.708l-.914-.915a.5.5 0 0 1 0-.707zM2 8a.5.5 0 0 1 .5-.5h1.586a.5.5 0 0 1 0 1H2.5A.5.5 0 0 1 2 8zm9.5 0a.5.5 0 0 1 .5-.5h1.5a.5.5 0 0 1 0 1H12a.5.5 0 0 1-.5-.5zm.754-4.246a.389.389 0 0 0-.527-.02L7.547 7.31A.91.91 0 1 0 8.85 8.569l3.434-4.297a.389.389 0 0 0-.029-.518z\"/>\n                                 <path fill-rule=\"evenodd\" d=\"M6.664 15.889A8 8 0 1 1 9.336.11a8 8 0 0 1-2.672 15.78zm-4.665-4.283A11.945 11.945 0 0 1 8 10c2.186 0 4.236.585 6.001 1.606a7 7 0 1 0-12.002 0z\"/>\n                                </svg>\n                                Plant status\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/DataCenter\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-graph-up\" viewBox=\"0 0 16 16\">\n                                   <path fill-rule=\"evenodd\" d=\"M0 0h1v15h15v1H0V0zm10 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-1 0V4.9l-3.613 4.417a.5.5 0 0 1-.74.037L7.06 6.767l-3.656 5.027a.5.5 0 0 1-.808-.588l4-5.5a.5.5 0 0 1 .758-.06l2.609 2.61L13.445 4H10.5a.5.5 0 0 1-.5-.5z\"/>\n                                </svg>\n                                Data center\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/plantdetails\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-flower3\" viewBox=\"0 0 16 16\">\n                                   <path d=\"M11.424 8c.437-.052.811-.136 1.04-.268a2 2 0 0 0-2-3.464c-.229.132-.489.414-.752.767C9.886 4.63 10 4.264 10 4a2 2 0 1 0-4 0c0 .264.114.63.288 1.035-.263-.353-.523-.635-.752-.767a2 2 0 0 0-2 3.464c.229.132.603.216 1.04.268-.437.052-.811.136-1.04.268a2 2 0 1 0 2 3.464c.229-.132.489-.414.752-.767C6.114 11.37 6 11.736 6 12a2 2 0 1 0 4 0c0-.264-.114-.63-.288-1.035.263.353.523.635.752.767a2 2 0 1 0 2-3.464c-.229-.132-.603-.216-1.04-.268zM9 4a1.468 1.468 0 0 1-.045.205c-.039.132-.1.295-.183.484a12.88 12.88 0 0 1-.637 1.223L8 6.142a21.73 21.73 0 0 1-.135-.23 12.88 12.88 0 0 1-.637-1.223 4.216 4.216 0 0 1-.183-.484A1.473 1.473 0 0 1 7 4a1 1 0 1 1 2 0zM3.67 5.5a1 1 0 0 1 1.366-.366 1.472 1.472 0 0 1 .156.142c.094.1.204.233.326.4.245.333.502.747.742 1.163l.13.232a21.86 21.86 0 0 1-.265.002 12.88 12.88 0 0 1-1.379-.06 4.214 4.214 0 0 1-.51-.083 1.47 1.47 0 0 1-.2-.064A1 1 0 0 1 3.67 5.5zm1.366 5.366a1 1 0 0 1-1-1.732c.001 0 .016-.008.047-.02.037-.013.087-.028.153-.044.134-.032.305-.06.51-.083a12.88 12.88 0 0 1 1.379-.06c.09 0 .178 0 .266.002a21.82 21.82 0 0 1-.131.232c-.24.416-.497.83-.742 1.163a4.1 4.1 0 0 1-.327.4 1.483 1.483 0 0 1-.155.142zM9 12a1 1 0 0 1-2 0 1.476 1.476 0 0 1 .045-.206c.039-.131.1-.294.183-.483.166-.378.396-.808.637-1.223L8 9.858l.135.23c.241.415.47.845.637 1.223.083.19.144.352.183.484A1.338 1.338 0 0 1 9 12zm3.33-6.5a1 1 0 0 1-.366 1.366 1.478 1.478 0 0 1-.2.064c-.134.032-.305.06-.51.083-.412.045-.898.061-1.379.06-.09 0-.178 0-.266-.002l.131-.232c.24-.416.497-.83.742-1.163a4.1 4.1 0 0 1 .327-.4c.046-.05.085-.086.114-.11.026-.022.04-.03.041-.032a1 1 0 0 1 1.366.366zm-1.366 5.366a1.494 1.494 0 0 1-.155-.141 4.225 4.225 0 0 1-.327-.4A12.88 12.88 0 0 1 9.74 9.16a22 22 0 0 1-.13-.232l.265-.002c.48-.001.967.015 1.379.06.205.023.376.051.51.083.066.016.116.031.153.044l.048.02a1 1 0 1 1-1 1.732zM8 9a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"/>\n                                </svg>\n                                Plant details\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/reports\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\n                                   <path d=\"M0 2a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1v7.5a2.5 2.5 0 0 1-2.5 2.5h-9A2.5 2.5 0 0 1 1 12.5V5a1 1 0 0 1-1-1V2zm2 3v7.5A1.5 1.5 0 0 0 3.5 14h9a1.5 1.5 0 0 0 1.5-1.5V5H2zm13-3H1v2h14V2zM5 7.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z\"/>\n                                </svg>\n                                Reports\n                             </a>\n                          </li>\n                          <li class=\"nav-item\">\n                             <a class=\"nav-link\" href=\"/plantowl-react-frontend/#/ThreeD\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-archive\" viewBox=\"0 0 16 16\">\n                                   <path d=\"M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5 8 5.961 14.154 3.5 8.186 1.113zM15 4.239l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z\"/>\n                                </svg>\n                                3D visulisation\n                             </a>\n                          </li>\n                       </ul>\n                    </div>\n                 </nav>\n                 <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n                    <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                       <h1 className=\"h2\">Dashboard</h1>\n                       <div className=\"btn-toolbar mb-2 mb-md-0\">\n                          <div className=\"btn-group me-2\">\n                             <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Share</button>\n                             <button type=\"button\" className=\"btn btn-sm btn-outline-secondary\">Export</button>\n                          </div>\n                          <button type=\"button\" className=\"btn btn-sm btn-outline-secondary dropdown-toggle\">\n                          <span data-feather=\"calendar\" />\n                          This week\n                          </button>\n                       </div>\n                    </div>\n                    <Router>\n                       <Switch>\n                          <Route path=\"/PlantStatus\" exact component={() =>\n                          <PlantStatus data = {this.state} />\n                          } />\n                          <Route path=\"/Login\" exact component={() =>\n                          <Login onLoginSubmit={ this.saveLogin } />\n                          } />\n                          <Route path=\"/ThreeD\" exact component={() =>\n                          <ThreeD data = {this.state} />\n                          } />\n                          <Route path=\"/DataCenter\" exact component={() =>\n                          <DataCenter data = {this.state} />\n                          } />\n                          <Route path=\"/PlantDetails\" exact component={() =>\n                          <PlantDetails data = {this.state} />\n                          } />\n                          <Route path=\"/Reports\" exact component={() =>\n                          <Reports data = {this.state} />\n                          } />\n                          <Route path=\"/Register\" exact component={() =>\n                          <Register onRegisterSubmit={ this.saveRegister } />\n                          } />\n                       </Switch>\n                    </Router>\n                    <canvas className=\"my-4 w-100\" id=\"myChart\" width={900} height={380} />\n                    <div id= \"datapage\">\n                    <h2>Plant date</h2>\n                    <div className=\"table-responsive\">\n                       <table className=\"table table-striped table-sm\">\n                          <thead>\n                             <tr>\n                                <th> # </th>\n                                <th>Post date</th>\n                                <th>temperature</th>\n                                <th>moisture - Plant 1</th>\n                                <th>moisture - Plant 2</th>\n                                <th>was watered</th>\n                                <th>water remaining</th>\n                             </tr>\n                          </thead>\n                          <tbody>\n                             {data.map((item) => (\n                             <tr>\n                                <td>{index = index + 1}</td>\n                                <td>{item.createdAt}</td>\n                                <td>{item.temperature}c</td>\n                                <td>{item.moisture}%</td>\n                                <td>{item.moisture2}%</td>\n                                <td>{item.watered}</td>\n                                <td>{item.waterLevel}L</td>\n                             </tr>\n                             ))}\n                          </tbody>\n                       </table>\n                    </div>\n                    </div>\n                 </main>\n              </div>\n           </div>\n        </div>\n     </div>\n    </div>\n\n  );//end retuen\n\n} // render\n\n} //plant export\n\n\nexport default Plants;\n","/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantStatus.js",[],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/PlantDetails.js",[],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Reports.js",["69","70","71","72","73","74","75","76","77"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/DataCenter.js",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Login.js",["94","95"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/Register.js",["96","97"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass Register extends React.Component{\n\n\n  state = {\n    email: '',\n    password:'',\n    conpassword: '',\n    username:''\n  };\n\n  email = (ev) => {\n    console.log('email():', ev.target.value)\n    this.setState({ email: ev.target.value})\n  }\n  password = (ev) => {\n    console.log('password():', ev.target.value)\n    this.setState({ password: ev.target.value})\n  }\n  username = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ username: ev.target.value})\n  }\n  conpassword = (ev) => {\n    console.log('username():', ev.target.value)\n    this.setState({ conspassword: ev.target.value})\n  }\n\n  handleSubmit = (ev) => {\n\n      console.log()\n    ev.preventDefault(this.state.email, this.state.password, this.state.username); //stop the form submit from reloading the page\n    //send the secret content to the parent component so it can submit it\n    //to the parent backend\n    this.props.onRegisterSubmit( this.state.email, this.state.password, this.state.username)\n\n\n  }\n\n  render(){\n\n    return(\n      <div className=\"login-wrapper\">\n      <Form onSubmit={this.handleSubmit}>\n      <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.email}/>\n        <Form.Text className=\"text-muted\">\n\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicEmail\" onSubmit={this.handleSubmit}>\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"email\" placeholder=\"Enter username\" onChange={this.username}/>\n        <Form.Text className=\"text-muted\">\n\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.password}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n      </Form.Group>\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Confirm passowrd</Form.Label>\n        <Form.Control type=\"password\" placeholder=\"Password\"  onChange={this.conspassword}/>\n      </Form.Group>\n      <Form.Group controlId=\"formBasicCheckbox\">\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n      </Form>\n      </div>\n\n\n    )\n\n\n  } // render\n\n\n\n} //User form\n\n\nexport default Register\n\n\n\n//\n// <form onSubmit={this.handleSubmit}>\n//   <h3> Name </h3>\n//   <textarea onChange={this.username}/>\n//   <br />\n//   <h3> Email </h3>\n//   <textarea onChange={this.email}/>\n//   <br />\n//   <h4> Password </h4>\n//   <textarea onChange={this.password}/>\n//   <br />\n//   <h4> Confirm Password </h4>\n//   <textarea onChange={this.conpassword}/>\n//   <br />\n//\n//   <button> Create account </button>\n// </form>\n",["98","99"],"/Users/sofoklisnimo/SEI/finalproject/front-end-plantowl/plant-owl/src/components/ThreeD.js",["100","101","102","103","104","105","106"],"import React from 'react';\nimport Plot from 'react-plotly.js'\n\n\nclass ThreeD extends React.Component {\n\n  //set state\n  state = {\n      index: 0\n  }\n\n  render() {\n    //set props.data\n    const {\n        temperature,\n        moisture,\n        date,\n        dateDay,\n        dateMonth,\n        waterLevel,\n        temperatureDay,\n        temperatureMonth,\n        wateredMonth,\n        wateredDay,\n        watered,\n        moisture2\n    } = this.props.data\n    \n    console.log(\"temprature\", temperature)\n\n    //set index values for graphing\n    const index = []\n    var i = 1\n    date.map(data => {\n        i = i + 1\n        index.push(i)\n\n    })\n\n\n    return (\n      <Plot\n        data={[\n          {\n            x: index,\n            y: date,\n            z: temperature,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'temperature',\n          },\n          {\n            x: index,\n            y: date,\n            z: moisture,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'moisture plant 1',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: waterLevel,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'Water Level',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: moisture2,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'moisture plant 2',\n\n          },\n          {\n            x: index,\n            y: date,\n            z: watered,\n            mode: 'markers',\n            type:'scatter3d',\n            name: 'plants were watered',\n\n          },\n        ]}\n        layout={{\n          height: 800,\n          width: 1200,\n          title: `Plant data`,\n        }}\n        onRelayout={(figure) => console.log(figure)}\n      />\n    );//return\n  }//render\n}//react componenet\n\n\nexport default ThreeD;\n",["107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"109","replacedBy":"113"},{"ruleId":"111","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":5,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"119","line":4,"column":5,"nodeType":"117","messageId":"118","endLine":4,"endColumn":11},{"ruleId":"115","severity":1,"message":"120","line":5,"column":5,"nodeType":"117","messageId":"118","endLine":5,"endColumn":13},{"ruleId":"115","severity":1,"message":"121","line":16,"column":5,"nodeType":"117","messageId":"118","endLine":16,"endColumn":9},{"ruleId":"115","severity":1,"message":"122","line":17,"column":5,"nodeType":"117","messageId":"118","endLine":17,"endColumn":15},{"ruleId":"115","severity":1,"message":"123","line":21,"column":8,"nodeType":"117","messageId":"118","endLine":21,"endColumn":18},{"ruleId":"115","severity":1,"message":"124","line":27,"column":8,"nodeType":"117","messageId":"118","endLine":27,"endColumn":22},{"ruleId":"115","severity":1,"message":"125","line":31,"column":5,"nodeType":"117","messageId":"118","endLine":31,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":197,"column":39,"nodeType":"128","messageId":"129","endLine":197,"endColumn":41},{"ruleId":"126","severity":1,"message":"127","line":213,"column":41,"nodeType":"128","messageId":"129","endLine":213,"endColumn":43},{"ruleId":"130","severity":1,"message":"131","line":332,"column":16,"nodeType":"117","messageId":"132","endLine":332,"endColumn":21},{"ruleId":"133","severity":1,"message":"134","line":350,"column":18,"nodeType":"135","endLine":350,"endColumn":54},{"ruleId":"115","severity":1,"message":"123","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":18},{"ruleId":"115","severity":1,"message":"136","line":23,"column":7,"nodeType":"117","messageId":"118","endLine":23,"endColumn":14},{"ruleId":"115","severity":1,"message":"137","line":24,"column":7,"nodeType":"117","messageId":"118","endLine":24,"endColumn":16},{"ruleId":"115","severity":1,"message":"138","line":26,"column":7,"nodeType":"117","messageId":"118","endLine":26,"endColumn":21},{"ruleId":"115","severity":1,"message":"139","line":27,"column":7,"nodeType":"117","messageId":"118","endLine":27,"endColumn":23},{"ruleId":"115","severity":1,"message":"140","line":28,"column":7,"nodeType":"117","messageId":"118","endLine":28,"endColumn":19},{"ruleId":"115","severity":1,"message":"141","line":29,"column":7,"nodeType":"117","messageId":"118","endLine":29,"endColumn":17},{"ruleId":"115","severity":1,"message":"142","line":35,"column":9,"nodeType":"117","messageId":"118","endLine":35,"endColumn":20},{"ruleId":"115","severity":1,"message":"143","line":40,"column":11,"nodeType":"117","messageId":"118","endLine":40,"endColumn":14},{"ruleId":"115","severity":1,"message":"144","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":14},{"ruleId":"115","severity":1,"message":"145","line":5,"column":8,"nodeType":"117","messageId":"118","endLine":5,"endColumn":19},{"ruleId":"115","severity":1,"message":"146","line":59,"column":10,"nodeType":"117","messageId":"118","endLine":59,"endColumn":18},{"ruleId":"115","severity":1,"message":"147","line":59,"column":20,"nodeType":"117","messageId":"118","endLine":59,"endColumn":31},{"ruleId":"115","severity":1,"message":"148","line":59,"column":33,"nodeType":"117","messageId":"118","endLine":59,"endColumn":46},{"ruleId":"115","severity":1,"message":"149","line":59,"column":48,"nodeType":"117","messageId":"118","endLine":59,"endColumn":59},{"ruleId":"115","severity":1,"message":"138","line":59,"column":61,"nodeType":"117","messageId":"118","endLine":59,"endColumn":75},{"ruleId":"115","severity":1,"message":"139","line":59,"column":77,"nodeType":"117","messageId":"118","endLine":59,"endColumn":93},{"ruleId":"115","severity":1,"message":"150","line":59,"column":95,"nodeType":"117","messageId":"118","endLine":59,"endColumn":102},{"ruleId":"115","severity":1,"message":"141","line":59,"column":104,"nodeType":"117","messageId":"118","endLine":59,"endColumn":114},{"ruleId":"115","severity":1,"message":"140","line":59,"column":116,"nodeType":"117","messageId":"118","endLine":59,"endColumn":128},{"ruleId":"115","severity":1,"message":"136","line":59,"column":136,"nodeType":"117","messageId":"118","endLine":59,"endColumn":143},{"ruleId":"115","severity":1,"message":"137","line":59,"column":145,"nodeType":"117","messageId":"118","endLine":59,"endColumn":154},{"ruleId":"115","severity":1,"message":"151","line":59,"column":156,"nodeType":"117","messageId":"118","endLine":59,"endColumn":166},{"ruleId":"115","severity":1,"message":"152","line":59,"column":168,"nodeType":"117","messageId":"118","endLine":59,"endColumn":181},{"ruleId":"115","severity":1,"message":"153","line":59,"column":183,"nodeType":"117","messageId":"118","endLine":59,"endColumn":198},{"ruleId":"115","severity":1,"message":"120","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"154","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":17},{"ruleId":"115","severity":1,"message":"120","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"154","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":17},{"ruleId":"109","replacedBy":"155"},{"ruleId":"111","replacedBy":"156"},{"ruleId":"115","severity":1,"message":"136","line":18,"column":9,"nodeType":"117","messageId":"118","endLine":18,"endColumn":16},{"ruleId":"115","severity":1,"message":"137","line":19,"column":9,"nodeType":"117","messageId":"118","endLine":19,"endColumn":18},{"ruleId":"115","severity":1,"message":"138","line":21,"column":9,"nodeType":"117","messageId":"118","endLine":21,"endColumn":23},{"ruleId":"115","severity":1,"message":"139","line":22,"column":9,"nodeType":"117","messageId":"118","endLine":22,"endColumn":25},{"ruleId":"115","severity":1,"message":"140","line":23,"column":9,"nodeType":"117","messageId":"118","endLine":23,"endColumn":21},{"ruleId":"115","severity":1,"message":"141","line":24,"column":9,"nodeType":"117","messageId":"118","endLine":24,"endColumn":19},{"ruleId":"126","severity":1,"message":"157","line":34,"column":19,"nodeType":"128","messageId":"158","endLine":34,"endColumn":21},{"ruleId":"109","replacedBy":"159"},{"ruleId":"111","replacedBy":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used.","'GaugeChart' is defined but never used.","'socketIOClient' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-use-before-define","'check' was used before it was defined.","usedBeforeDefined","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'dateDay' is assigned a value but never used.","'dateMonth' is assigned a value but never used.","'temperatureDay' is assigned a value but never used.","'temperatureMonth' is assigned a value but never used.","'wateredMonth' is assigned a value but never used.","'wateredDay' is assigned a value but never used.","'calculation' is assigned a value but never used.","'avg' is assigned a value but never used.","'Button' is defined but never used.","'SplitButton' is defined but never used.","'moisture' is assigned a value but never used.","'moistureDay' is assigned a value but never used.","'moistureMonth' is assigned a value but never used.","'temperature' is assigned a value but never used.","'watered' is assigned a value but never used.","'waterLevel' is assigned a value but never used.","'waterLevelDay' is assigned a value but never used.","'waterLevelMonth' is assigned a value but never used.","'PropTypes' is defined but never used.",["161"],["162"],"Array.prototype.map() expects a return value from arrow function.","expectedInside",["161"],["162"],"no-global-assign","no-unsafe-negation"]